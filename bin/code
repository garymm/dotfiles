#!/usr/bin/env bash

set -o errexit
set -o pipefail

EXE_NAME=$(basename "${BASH_SOURCE[0]}")
# Remove this script's directory from PATH so we can find the real code binary using `which`.
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
export PATH=`echo $PATH | tr ":" "\n" | grep -v "${SCRIPT_DIR}" | xargs | tr " " ":"`

# Move environment variables from tmux into shell
if [[ -n "$TMUX" ]]; then
    prefix_len=$(expr length "VSCODE_IPC_HOOK_CLI=")
    assignment=$(tmux show-environment | grep ^VSCODE_IPC_HOOK_CLI)
    if [[ -n "${assignment}" ]]; then
        export VSCODE_IPC_HOOK_CLI="${assignment:${prefix_len}}"
        prefix_len=$(expr length "PATH=")
        assignment=$(tmux show-environment | grep ^PATH)
        export PATH="${assignment:${prefix_len}}"
    fi
fi

for dir in "/usr/local" "/usr" "/opt/homebrew"; do
    if [[ -x "${dir}/bin/${EXE_NAME}" ]]; then
        export PATH="${dir}/bin:$PATH"
        break
    fi
done

# Try to find VS Code remote session without being inside its terminal.
if [[ -z "$(which ${EXE_NAME})" && $(uname) == "Linux" ]]; then
    # Sort by mtime, newest first. Connecting to older ones might fail.
    for f in $(find /proc -maxdepth 2 -readable -name environ -type f -printf '%T@ %p\n' | sort -n | cut -d' ' -f2-); do
      # check if process is running
      pid=$(basename $(dirname "${f}"))
      if ! ps -p "${pid}" >/dev/null 2>&1; then
          continue
      fi
      # convert null bytes to new lines with tr
      if [[ -n $(tr '\0' '\n' < ${f} | grep 'VSCODE_IPC_HOOK_CLI=') ]]; then
        while IFS= read -r -d $'\0' assignment; do
            if [[ $assignment == VSCODE_IPC_HOOK_CLI=* ]]; then
                prefix_len=$(expr length "VSCODE_IPC_HOOK_CLI=")
                export VSCODE_IPC_HOOK_CLI="${assignment:${prefix_len}}"
            fi
            if [[ $assignment == PATH=* ]]; then
                prefix_len=$(expr length "PATH=")
                export PATH="${assignment:${prefix_len}}"
            fi
        done < "${f}"
        if [[ -n "${VSCODE_IPC_HOOK_CLI}" ]]; then
            break
        fi
      fi
    done
fi

${EXE_NAME} "$@"
